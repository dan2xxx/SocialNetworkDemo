{"version":3,"sources":["components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/MessageItem/MessageItem.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js","components/Dialogs/Dialogs.module.css"],"names":["DialogItem","props","imgSrc","userData","avatarUrl","className","classes","dialog","smallAvatar","src","activeClassName","active","to","id","name","MessageItem","message","microAvatar","text","Dialogs","demoUserList","messagesData","dialogsData","useForm","register","handleSubmit","errors","reset","inbox","dialogs","map","user","messages","index","onSubmit","data","e","onMessageClick","Message","target","placeholder","ref","required","maxLength","error","type","compose","withAuthRedirect","connect","state","messagesPage","messageInput","myId","loginForm","dispatch","sendMessageActionCreator","module","exports"],"mappings":"qLAmBeA,EAfI,SAACC,GAGhB,IAAMC,EAASD,EAAME,SAASC,UAE9B,OACI,sBAAKC,UAAWC,IAAQC,OAAxB,UAEI,qBAAKF,UAAWC,IAAQE,YAAaC,IAAKP,IAC1C,cAAC,IAAD,CAASQ,gBAAiBJ,IAAQK,OAAQC,GAAI,YAAcX,EAAMY,GAAlE,SAAuEZ,EAAMa,WCQ1EC,EAfK,SAACd,GAEjB,IAAMC,EAASD,EAAME,SAASC,UAG9B,OACI,sBAAKC,UAAWC,IAAQU,QAAxB,UAEI,qBAAKX,UAAWC,IAAQW,YAAaR,IAAKP,IACzCD,EAAMiB,S,QC8CJC,EAtDC,SAAClB,GAIb,IAAME,EAAWF,EAAME,SAASiB,aAC1BC,EAAepB,EAAMoB,aACrBC,EAAcrB,EAAMqB,YANH,EAc2BC,cAA1CC,EAde,EAcfA,SAAUC,EAdK,EAcLA,aAAqBC,GAdhB,EAcSC,MAdT,EAcgBD,QAEvC,OACI,sBAAKrB,UAAWC,IAAQsB,MAAxB,UACI,qBAAKvB,UAAWC,IAAQuB,QAAxB,SACKP,EAAYQ,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,CAAoCjB,KAAMiB,EAAKjB,KAAMD,GAAIkB,EAAKlB,GAAIV,SAAUA,EAAS4B,EAAKlB,KAAzE,QAAUkB,EAAKlB,SAI/D,sBAAKR,UAAWC,IAAQ0B,SAAxB,UACKX,EAAaS,KAAI,SAACvB,EAAQ0B,GAAT,OAAmB,cAAC,EAAD,CAAmCf,KAAMX,EAAOW,KAAML,GAAIN,EAAOM,GAAIV,SAAUA,EAASI,EAAOM,KAA7E,QAAUoB,MAGjE,qBAAK5B,UAAU,eAAf,SAEI,uBAAM6B,SAAUT,GArBf,SAACU,EAAMC,GAEpBnC,EAAMoC,eAAeF,EAAKG,SAC1BF,EAAEG,OAAOZ,WAkBG,UAII,uBAAOb,KAAK,UAAU0B,YAAY,kBAAkBC,IAAKjB,EAAS,CAAEkB,UAAU,EAAMC,UAAW,OAC/F,sBAAKtC,UAAWC,IAAQsC,MAAxB,UAAgClB,EAAOY,SAAW,mBAAlD,UAEA,uBAAOO,KAAK,uB,gBChBrBC,sBACXC,IACAC,aAnBoB,SAACC,GACrB,MAAO,CACH9C,SAAU8C,EAAM9C,SAChBkB,aAAc4B,EAAMC,aAAa7B,aACjCC,YAAa2B,EAAMC,aAAa5B,YAChC6B,aAAcF,EAAMC,aAAaC,aACjCC,KAAMH,EAAMI,UAAUxC,OAKH,SAACyC,GACxB,MAAO,CACHjB,eAAgB,SAACnB,GAAUoC,EAASC,YAAyBrC,SAItD4B,CAGb3B,I,mBC7BFqC,EAAOC,QAAU,CAAC,MAAQ,uBAAuB,QAAU,yBAAyB,SAAW,0BAA0B,OAAS,wBAAwB,OAAS,wBAAwB,QAAU,yBAAyB,YAAc,6BAA6B,YAAc,6BAA6B,MAAQ","file":"static/js/6.5d554819.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    \r\n    const imgSrc = props.userData.avatarUrl\r\n    \r\n    return (\r\n        <div className={classes.dialog}>\r\n            \r\n            <img className={classes.smallAvatar} src={imgSrc} />\r\n            <NavLink activeClassName={classes.active} to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './../Dialogs.module.css';\r\n\r\n\r\n\r\nconst MessageItem = (props) => {\r\n\r\n    const imgSrc = props.userData.avatarUrl\r\n    //debugger\r\n\r\n    return (\r\n        <div className={classes.message}>\r\n            {/* console.log(props) */}\r\n            <img className={classes.microAvatar} src={imgSrc} />\r\n            {props.text}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MessageItem;","import React from 'react';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport classes from './Dialogs.module.css';\r\nimport MessageItem from './MessageItem/MessageItem';\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n\r\n\r\n    const userData = props.userData.demoUserList\r\n    const messagesData = props.messagesData\r\n    const dialogsData = props.dialogsData\r\n\r\n    const onSubmit = (data, e) => {\r\n        //console.log(data)\r\n        props.onMessageClick(data.Message)\r\n        e.target.reset()\r\n    }\r\n\r\n    const { register, handleSubmit, reset, errors } = useForm();\r\n\r\n    return (\r\n        <div className={classes.inbox}>\r\n            <div className={classes.dialogs}>\r\n                {dialogsData.map((user) => <DialogItem key={'dId: ' + user.id} name={user.name} id={user.id} userData={userData[user.id]} />)}\r\n\r\n            </div>\r\n\r\n            <div className={classes.messages}>\r\n                {messagesData.map((dialog, index) => <MessageItem key={'mId: ' + index} text={dialog.text} id={dialog.id} userData={userData[dialog.id]} />)}\r\n               \r\n\r\n                <div className='inputDialogs'>\r\n\r\n                    <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                        \r\n                        {/* include validation with required or other standard HTML validation rules */}\r\n                        <input name=\"Message\" placeholder='Enter message: ' ref={register({ required: true, maxLength: 20  })}  />\r\n                        <div className={classes.error}>{errors.Message && \"Max length is 20\"}    </div>    \r\n\r\n                        <input type=\"submit\" />\r\n                        \r\n                        \r\n                    </form>\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;","import React, { useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { sendMessageActionCreator } from './../../redux/dialog-reducer'\r\nimport Dialogs from './Dialogs';\r\nimport withAuthRedirect from './../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userData: state.userData,\r\n        messagesData: state.messagesPage.messagesData,\r\n        dialogsData: state.messagesPage.dialogsData,\r\n        messageInput: state.messagesPage.messageInput,\r\n        myId: state.loginForm.id,\r\n    }\r\n}\r\n \r\n \r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onMessageClick: (text) => {dispatch(sendMessageActionCreator(text))}\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs)\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inbox\":\"Dialogs_inbox__1zizo\",\"dialogs\":\"Dialogs_dialogs__2KsHb\",\"messages\":\"Dialogs_messages__1_2Sx\",\"dialog\":\"Dialogs_dialog__2HL6v\",\"active\":\"Dialogs_active__1Xwnw\",\"message\":\"Dialogs_message__2DFKQ\",\"smallAvatar\":\"Dialogs_smallAvatar__2SOmQ\",\"microAvatar\":\"Dialogs_microAvatar__1iijQ\",\"error\":\"Dialogs_error__y6SgF\"};"],"sourceRoot":""}