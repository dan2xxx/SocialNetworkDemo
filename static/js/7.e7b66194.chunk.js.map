{"version":3,"sources":["hoc/withLoginRedirect.js","components/Header/Login/LoginPage.js","components/Header/Login/LoginPage.module.css"],"names":["mapStateToPropsRedirect","state","myId","loginForm","id","withLoginRedirect","Component","connect","props","to","LoginForm","className","classes","form","onSubmit","render","handleSubmit","form_control","name","validate","required","input","meta","type","placeholder","error","touched","error_input","component","captchaUrl","src","errorLog","LoginPageContainer","compose","loginInProgress","isFetched","loginThunk","logInThunkCreator","console","log","LoaderProcess","data","module","exports"],"mappings":"4LAIMA,EAA0B,SAACC,GAC7B,MAAQ,CACJC,KAAMD,EAAME,UAAUC,KA8BfC,EAvBW,SAACC,GAkBvB,OAFiCC,YAAQP,EAAwB,GAAhCO,EAbP,SAACC,GAEvB,OAAIA,EAAMN,KACC,cAAC,IAAD,CAAUO,GAAI,YAAcD,EAAMN,OAIzC,cAACI,EAAD,eAAeE,Q,iCCZrBE,EAAY,SAACF,GAyBf,OACI,qBAAKG,UAAWC,IAAQC,KAAxB,SAOI,cAAC,IAAD,CAEIC,SAAUN,EAAMM,SAChBC,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OAGJ,uBAAMF,SAAUE,EAAhB,UAEI,yCACA,8BACI,cAAC,IAAD,CAAOL,UAAWC,IAAQK,aAAcC,KAAK,QAAQC,SAAUC,IAA/D,SACK,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACG,gCAEI,iDAAWD,GAAX,IAAkBE,KAAK,OAAOC,YAAY,QAAQb,UAAWW,EAAKG,OAASH,EAAKI,QAAUd,IAAQe,YAAcf,IAAQS,SACvHC,EAAKG,OAASH,EAAKI,SAAW,sBAAMf,UAAWC,IAAQa,MAAzB,SAAiCH,EAAKG,gBASrF,8BACI,cAAC,IAAD,CAAOP,KAAK,WAAYC,SAAUC,IAAlC,SACC,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACO,gCACI,iDAAWD,GAAX,IAAkBG,YAAY,WAAWD,KAAK,WAAWZ,UAAWW,EAAKG,OAASH,EAAKI,QAAUd,IAAQe,YAAcf,IAAQS,SAC9HC,EAAKG,OAASH,EAAKI,SAAW,sBAAMf,UAAWC,IAAQa,MAAzB,SAAiCH,EAAKG,gBAQrF,gCACI,cAAC,IAAD,CAAOP,KAAK,aAAaU,UAAU,QAAQL,KAAK,aADpD,iBAaCf,EAAMqB,WA9EnB,gCACoB,qBAAKC,IAAKtB,EAAMqB,aAChB,cAAC,IAAD,CAAOX,KAAK,UAAWC,SAAUC,IAAjC,SACH,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACO,gCACI,iDAAWD,GAAX,IAAkBG,YAAY,UAAUD,KAAK,OAAOZ,UAAWW,EAAKG,OAASH,EAAKI,QAAUd,IAAQe,YAAcf,IAAQS,SACzHC,EAAKG,OAASH,EAAKI,SAAW,sBAAMf,UAAWC,IAAQa,MAAzB,SAAiCH,EAAKG,iBAwEjD,KACpC,wBAAQF,KAAK,SAAb,oBA7CJ,IA6C0C,sBAAMZ,UAAWC,IAAQa,MAAzB,SAAiCjB,EAAMuB,SAAWvB,EAAMuB,SAAW,gBA+C3HC,EAAqBC,YACvB5B,EACAE,aAXoB,SAACN,GACrB,MAAQ,CACJiC,gBAAiBjC,EAAME,UAAU+B,gBACjCC,UAAWlC,EAAME,UAAUgC,UAC3BJ,SAAU9B,EAAME,UAAU4B,SAC1BF,WAAY5B,EAAME,UAAU0B,cAMP,CAAEO,WAAYC,MAFhBJ,EAjCT,SAACzB,GAUf,OACI,gCAEK8B,QAAQC,IAAI/B,GACZA,EAAM0B,gBAAkB,cAACM,EAAA,EAAD,IAAoB,cAAC,EAAD,CAAW1B,SAX/C,SAAC2B,GACdjC,EAAM4B,WAAWK,IAU+DV,SAAUvB,EAAMuB,SAAUF,WAAYrB,EAAMqB,mBA0BrHG,a,mBCpJfU,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,YAAc,+BAA+B,MAAQ","file":"static/js/7.e7b66194.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst mapStateToPropsRedirect = (state) => {\r\n    return ({\r\n        myId: state.loginForm.id\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\nconst withLoginRedirect = (Component) => {\r\n\r\n    //debugger\r\n    const RedirectComponent = (props) => {\r\n\r\n        if (props.myId) {\r\n            return <Redirect to={'/profile/' + props.myId} />\r\n        } \r\n       \r\n        return (\r\n            <Component {...props} />\r\n            \r\n        )\r\n    }\r\n\r\n    \r\n    let ConnectedWithLoginRedirect = connect(mapStateToPropsRedirect,{})(RedirectComponent)\r\n\r\n    return ConnectedWithLoginRedirect\r\n    \r\n}\r\n\r\n\r\nexport default withLoginRedirect\r\n\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Field } from 'react-final-form'\r\nimport { logInThunkCreator } from './../../../redux/login-reducer'\r\nimport LoaderProcess from './../../LoaderProcess/LoaderProcess'\r\nimport withLoginRedirect from './../../../hoc/withLoginRedirect'\r\nimport { compose } from 'redux';\r\nimport { required } from './../../../utils/validators'\r\nimport classes from './LoginPage.module.css'\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n\r\n    const captchaForm = () => {\r\n        return (\r\n            <div>\r\n                                <img src={props.captchaUrl}></img>\r\n                                <Field name=\"captcha\"  validate={required} >\r\n                            {({ input, meta }) => (\r\n                                    <div>\r\n                                        <input {...input} placeholder=\"Captcha\" type=\"text\" className={meta.error && meta.touched ? classes.error_input : classes.input}/>\r\n                                        {meta.error && meta.touched && <span className={classes.error}>{meta.error}</span>}\r\n                                    </div>\r\n\r\n                                )\r\n                                \r\n                                }\r\n                            </Field>\r\n                            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.form}    >\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <Form\r\n                \r\n                onSubmit={props.onSubmit}\r\n                render={({ handleSubmit }) => (\r\n\r\n\r\n                    <form onSubmit={handleSubmit}>\r\n                        \r\n                        <h2>Login: </h2>\r\n                        <div>\r\n                            <Field className={classes.form_control} name=\"email\" validate={required} >\r\n                                {({ input, meta }) => (\r\n                                    <div>\r\n                                        \r\n                                        <input {...input} type=\"text\" placeholder=\"Login\" className={meta.error && meta.touched ? classes.error_input : classes.input} />\r\n                                        {meta.error && meta.touched && <span className={classes.error}>{meta.error}</span>}\r\n                                    </div>\r\n\r\n                                )\r\n                                \r\n                                }\r\n\r\n                            </Field>\r\n                        </div>\r\n                        <div>\r\n                            <Field name=\"password\"  validate={required} >\r\n                            {({ input, meta }) => (\r\n                                    <div>\r\n                                        <input {...input} placeholder=\"Password\" type=\"password\" className={meta.error && meta.touched ? classes.error_input : classes.input}/>\r\n                                        {meta.error && meta.touched && <span className={classes.error}>{meta.error}</span>}\r\n                                    </div>\r\n\r\n                                )\r\n                                \r\n                                }\r\n                            </Field>\r\n                        </div>\r\n                        <div>\r\n                            <Field name=\"rememberMe\" component=\"input\" type=\"Checkbox\" />\r\n                Remember me\r\n            </div>\r\n\r\n                            \r\n                            \r\n\r\n                            \r\n\r\n\r\n\r\n\r\n                        {props.captchaUrl ? captchaForm() : null}\r\n                        <button type=\"submit\">Submit</button> <span className={classes.error}>{props.errorLog ? props.errorLog : null}</span>\r\n                    </form>\r\n\r\n\r\n                )}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst LoginPage = (props) => {\r\n\r\n\r\n    const onSubmit = (data) => {\r\n        props.loginThunk(data)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {console.log(props)}\r\n            {props.loginInProgress ? <LoaderProcess /> : <LoginForm onSubmit={onSubmit} errorLog={props.errorLog} captchaUrl={props.captchaUrl}  />}\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nconst mapPropsToState = (state) => {\r\n    return ({\r\n        loginInProgress: state.loginForm.loginInProgress,\r\n        isFetched: state.loginForm.isFetched,\r\n        errorLog: state.loginForm.errorLog,\r\n        captchaUrl: state.loginForm.captchaUrl\r\n    })\r\n}\r\n\r\nconst LoginPageContainer = compose(\r\n    withLoginRedirect,\r\n    connect(mapPropsToState, { loginThunk: logInThunkCreator })\r\n)(LoginPage)\r\n\r\n\r\n\r\nexport default LoginPageContainer\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LoginPage_form__1Oqfi\",\"input\":\"LoginPage_input__3szsd\",\"error_input\":\"LoginPage_error_input__3J6cr\",\"error\":\"LoginPage_error__1viwB\"};"],"sourceRoot":""}